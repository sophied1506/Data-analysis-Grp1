library(patchwork)
library(moderndive)
library(sjPlot)
#| echo: false
df <- read.csv("DAProject3.csv")
df <- df %>%
mutate(
Sex = as.factor(Sex),
AgeGroup = as.factor(AgeGroup),
Veg = as.factor(Veg),
Fruit = as.factor(Fruit),
Obese = as.factor(Obese),
Employment = as.factor(Employment)
)
df$Employment_Clean <- as.factor(ifelse(df$Employment == "In full-time education" | df$Employment =="In paid employment, self-employed or on gov't training", "Employed/Full-Time Training or Education", ifelse(df$Employment == "Retired", "Retired", "Unemployed/Other")))
df$FV <- as.factor(ifelse(df$Fruit == "Yes" | df$Veg == "Yes", "Yes", "No"))
df$AgeCategory <- as.factor(ifelse(df$AgeGroup %in% c("16-24", "25-34"), "Young",
ifelse(df$AgeGroup %in% c("35-44", "45-54", "55-64"), "Middle-aged",
"Old")))
df$AgeCategory <- relevel(df$AgeCategory, ref = "Young")
#| echo: false
mod2 <- glm(Obese ~ Sex + Year + FV + AgeCategory + Employment_Clean, data = df, family = binomial)
mod2_tidy <- mod2 %>% broom::tidy() %>% gt()
AIC_mod2 <- AIC(mod2)
plot_model(mod2,
type = "pred",
terms = "Employment_Clean",
axis.title = c("Employment Status", "Probability of Obesity"),
title = "Predicted Probability of Obesity by Employment Status")
plot_model(mod2,
show.values = TRUE,
title = "Odds (Obesity)", show.p = FALSE, axis.lim = c(1, 1.5))
#| echo: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "Odds (Obesity)", show.p = FALSE, axis.lim = c(1, 1.5))
#| echo: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "Odds (Obesity)",
show.p = FALSE)
#| echo: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "Odds (Obesity)",
show.p = FALSE, axis.lim = c(0.7, 2))
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.9, 1.9))
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.85, 1.9))
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.85, 1.95))
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(mod2,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.9, 1.95))
#| echo: false
#| warning: false
#| message: false
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidymodels)
library(sjPlot)
library(performance)
library(kableExtra)
library(gt)
library(tidyverse)
library(gt)
library(MASS)
library(patchwork)
library(moderndive)
df<-read.csv("DAProject3.csv")
df$Sex<-as.factor(df$Sex)
df$AgeGroup<-as.factor(df$AgeGroup)
df$Veg<-as.factor(df$Veg)
df$Fruit<-as.factor(df$Fruit)
df$Obese<-as.factor(df$Obese)
df$Employment<-as.factor(df$Employment)
df$Employment_Clean<-as.factor(ifelse(df$Employment=="In full-time education"|df$Employment=="In paid employment, self-employed or on gov't training", "Employed/Full-Time Training or Education",ifelse(df$Employment=="Retired", "Retired", "Unemployed/Other")))
df$FV<-as.factor(ifelse(df$Fruit=="Yes"|df$Veg=="Yes", "Yes", "No"))
df$AgeCategory <- as.factor(ifelse(df$AgeGroup %in% c("16-24", "25-34"), "Young",
ifelse(df$AgeGroup %in% c("35-44", "45-54", "55-64"), "Middle-aged",
"Old")))
df$AgeCategory <- relevel(df$AgeCategory, ref = "Young")
#| label: fig-obesityyear
#| fig-cap: Proportion of Obesity by Year
proportionsyear <- df |>
group_by(Year, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Year) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsyear, aes(x = factor(Year), y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Year",
x = "Year",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
library(patchwork)
#| label: fig-ages
#| fig-cap: proportion of Obesity by Age Categories
##graph 1
proportionsage <- df |>
group_by(AgeGroup, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(AgeGroup) |>
mutate(Proportion = Count/sum(Count))
p1 <- ggplot(proportionsage, aes(x = AgeGroup, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Age",
x = "Age",
y = "Proportion",
fill = "Obesity") +
theme_minimal()+
guides(x= guide_axis(angle = 90))
##graph 2
proportionsagec <- df |>
group_by(AgeCategory, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(AgeCategory) |>
mutate(Proportion = Count/sum(Count))
p2 <- ggplot(proportionsagec, aes(x = AgeCategory, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Age Category",
x = "Age",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
#| label: fig-ages
#| fig-cap: Obesity Proportions against Age Groups and Age Categories
p1+p2
#| label: fig-gender
#| fig-cap: Proportion of Obesity by Gender
proportionsgender <- df |>
group_by(Sex, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Sex) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsgender, aes(x = Sex, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Sex",
x = "Sex",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
#| label: fig-social
#| fig-cap: Proportion of Obesity by Employment Type
proportionssocial <- df |>
group_by(Employment_Clean, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Employment_Clean) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionssocial, aes(x = Employment_Clean, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Employment Type",
x = "Employment Type",
y = "Proportion",
fill = "Obesity") +
guides(x= guide_axis(angle = 45))
#| warning: false
#| label: fig-FV
#| fig-cap: The Proportion of Obesity Against Consumption of the Required Amount of Fruit or Vegetables
proportionsFV <- df |>
group_by(FV, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(FV) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsFV, aes(x= FV, y= Proportion, fill = Obese))+
geom_bar(stat = "identity", postition = "fill")+
labs(title = "Proportion of Obesity (Yes/No) by Fruit and Veg intake",
x = "Fruit and Veg Intake (Yes/No)",
y = "Proportion",
fill = "Obesity")
#| echo: false
mod2 <- glm(Obese ~ Sex + Year + FV + AgeCategory + Employment_Clean, data = df, family = binomial)
mod2_tidy <- mod2 %>% broom::tidy() %>% gt()
AIC_mod2 <- AIC(mod2)
#| echo: false
step.model <- stepAIC(mod2, direction = "backward", trace = FALSE)
Coefs <- round(coef(step.model), 3)
AIC_stepmod <- step.model$anova[, 6]
step.model_tidy <- step.model %>% broom::tidy() %>% gt()
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(step.model,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.9, 1.95))
#| echo: false
#| fig-cap: GLM diagnostics for the obesity rates in Scotland
#| label: fig-stepmoddiag
#| fig-align: center
library(performance)
check_model(step.model, panel = TRUE)
# IDK WHY IT IS SHOWING 5 PANELS INSTEAD OF 4????
#| echo: false
#| fig-cap: ROC curve for Stepwise Regression Model
#| label: fig-stepmodroc
#| fig-align: center
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
#| echo: false
#| fig-cap: ROC curve for Stepwise Regression Model
#| label: fig-stepmodroc
#| fig-align: center
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
roc_curve(pred_results,
truth = Obese,
.fitted,
event_level = "second") %>%
autoplot()
roc_auc(pred_results,
truth = Obese,
.fitted)
#| echo: false
#| fig-cap: ROC curve for Stepwise Regression Model
#| label: fig-stepmodroc
#| fig-align: center
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
roc_curve(pred_results,
truth = Obese,
.fitted,
event_level = "second") %>%
autoplot()
roc_auc(pred_results,
truth = Obese,
.fitted)
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
roc_curve(pred_results,
truth = Obese,
.fitted,
event_level = "second") %>%
autoplot()
roc_auc(pred_results,
truth = Obese,
.fitted)
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
roc_curve(pred_results,
truth = Obese,
.fitted,
event_level = "second") %>%
autoplot()
roc_auc(pred_results,
truth = Obese,
.fitted)
#| label: fig-obesityyear
#| fig-cap: Proportion of Obesity by Year
proportionsyear <- df |>
group_by(Year, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Year) |>
mutate(Proportion = Count/sum(Count))
#| echo: false
#| warning: false
#| message: false
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidymodels)
library(sjPlot)
library(performance)
library(kableExtra)
library(gt)
library(tidyverse)
library(gt)
library(MASS)
library(patchwork)
library(moderndive)
step.model_tidy <- step.model %>% broom::tidy() %>% gt()
#| echo: false
#| warning: false
#| message: false
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidymodels)
library(sjPlot)
library(performance)
library(kableExtra)
library(gt)
library(tidyverse)
library(gt)
library(MASS)
library(patchwork)
library(moderndive)
df<-read.csv("DAProject3.csv")
df$Sex<-as.factor(df$Sex)
df$AgeGroup<-as.factor(df$AgeGroup)
df$Veg<-as.factor(df$Veg)
df$Fruit<-as.factor(df$Fruit)
df$Obese<-as.factor(df$Obese)
df$Employment<-as.factor(df$Employment)
df$Employment_Clean<-as.factor(ifelse(df$Employment=="In full-time education"|df$Employment=="In paid employment, self-employed or on gov't training", "Employed/Full-Time Training or Education",ifelse(df$Employment=="Retired", "Retired", "Unemployed/Other")))
df$FV<-as.factor(ifelse(df$Fruit=="Yes"|df$Veg=="Yes", "Yes", "No"))
df$AgeCategory <- as.factor(ifelse(df$AgeGroup %in% c("16-24", "25-34"), "Young",
ifelse(df$AgeGroup %in% c("35-44", "45-54", "55-64"), "Middle-aged",
"Old")))
df$AgeCategory <- relevel(df$AgeCategory, ref = "Young")
#| label: fig-obesityyear
#| fig-cap: Proportion of Obesity by Year
proportionsyear <- df |>
group_by(Year, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Year) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsyear, aes(x = factor(Year), y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Year",
x = "Year",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
library(patchwork)
#| label: fig-ages
#| fig-cap: proportion of Obesity by Age Categories
##graph 1
proportionsage <- df |>
group_by(AgeGroup, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(AgeGroup) |>
mutate(Proportion = Count/sum(Count))
p1 <- ggplot(proportionsage, aes(x = AgeGroup, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Age",
x = "Age",
y = "Proportion",
fill = "Obesity") +
theme_minimal()+
guides(x= guide_axis(angle = 90))
##graph 2
proportionsagec <- df |>
group_by(AgeCategory, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(AgeCategory) |>
mutate(Proportion = Count/sum(Count))
p2 <- ggplot(proportionsagec, aes(x = AgeCategory, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Age Category",
x = "Age",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
#| label: fig-ages
#| fig-cap: Obesity Proportions against Age Groups and Age Categories
p1+p2
#| label: fig-gender
#| fig-cap: Proportion of Obesity by Gender
proportionsgender <- df |>
group_by(Sex, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Sex) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsgender, aes(x = Sex, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Sex",
x = "Sex",
y = "Proportion",
fill = "Obesity") +
theme_minimal()
#| label: fig-social
#| fig-cap: Proportion of Obesity by Employment Type
proportionssocial <- df |>
group_by(Employment_Clean, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Employment_Clean) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionssocial, aes(x = Employment_Clean, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
labs(title = "Proportion of Obesity (Yes/No) by Employment Type",
x = "Employment Type",
y = "Proportion",
fill = "Obesity") +
guides(x= guide_axis(angle = 45))
#| warning: false
#| label: fig-FV
#| fig-cap: The Proportion of Obesity Against Consumption of the Required Amount of Fruit or Vegetables
proportionsFV <- df |>
group_by(FV, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(FV) |>
mutate(Proportion = Count/sum(Count))
ggplot(proportionsFV, aes(x= FV, y= Proportion, fill = Obese))+
geom_bar(stat = "identity", postition = "fill")+
labs(title = "Proportion of Obesity (Yes/No) by Fruit and Veg intake",
x = "Fruit and Veg Intake (Yes/No)",
y = "Proportion",
fill = "Obesity")
#| echo: false
mod2 <- glm(Obese ~ Sex + Year + FV + AgeCategory + Employment_Clean, data = df, family = binomial)
mod2_tidy <- mod2 %>% broom::tidy() %>% gt()
AIC_mod2 <- AIC(mod2)
#| echo: false
step.model <- stepAIC(mod2, direction = "backward", trace = FALSE)
Coefs <- round(coef(step.model), 3)
AIC_stepmod <- step.model$anova[, 6]
step.model_tidy <- step.model %>% broom::tidy() %>% gt()
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Odds (Obesity)
#| label: fig-odds
#| fig-align: center
plot_model(step.model,
show.values = TRUE,
title = "",
show.p = FALSE, axis.lim = c(0.9, 1.95))
#| echo: false
#| fig-cap: GLM diagnostics for the obesity rates in Scotland
#| label: fig-stepmoddiag
#| fig-align: center
library(performance)
check_model(step.model, panel = TRUE)
# IDK WHY IT IS SHOWING 5 PANELS INSTEAD OF 4???? IS IT POSSIBLE TO GET RID OF THE COLINEARITY MODEL OR IS THIS IMPORTANT? IF IMPORTANT ADD TO DESCRIPTION BELOW AS I HAVE IGNORED IT.
#| echo: false
#| fig-cap: ROC curve for Stepwise Regression Model
#| label: fig-stepmodroc
#| fig-align: center
pred_results <- step.model %>%
augment(type.predict = c("response")) %>%
mutate(predicted_class = factor(ifelse(.fitted > 0.5, "Yes", "No")))
roc_curve(pred_results,
truth = Obese,
.fitted,
event_level = "second") %>%
autoplot()
roc_value <- roc_auc(pred_results,
truth = Obese,
.fitted)
step.mod1 <- stepAIC(mod1, direction = "backward", trace = FALSE)
Coefs <- round(coef(step.mod1), 3)
mod1 <- glm(Obese ~ Sex * Year * FV * AgeCategory * Employment_Clean, data = df, family = binomial)
mod1_tidy <- mod1 %>% broom::tidy() %>% gt()
AIC_mod1 <- AIC(mod1)
step.mod1 <- stepAIC(mod1, direction = "backward", trace = FALSE)
Coefs <- round(coef(step.mod1), 3)
AIC_step.mod1<- step.mod1$anova[, 6]
step.mod1_tidy <- step.mod1 %>% broom::tidy() %>% gt()
step.mod1_tidy
step.mod1_tidy
View(step.model_tidy)
View(step.model_tidy)
quarto install tinytex
#| label: fig-social-gender
#| fig-cap: Proportion of Obesity by Employment Type and Sex
proportions_combined <- df |>
group_by(Sex, Employment_Clean, Obese) |>
summarise(Count = n(), .groups = "drop") |>
group_by(Sex, Employment_Clean) |>
mutate(Proportion = Count / sum(Count))
ggplot(proportions_combined, aes(x = Employment_Clean, y = Proportion, fill = Obese)) +
geom_bar(stat = "identity", position = "fill") +
facet_wrap(~Sex) +  # Creates separate panels for each Sex
scale_fill_manual(values = c("Yes" = "red", "No" = "green")) +  # Assign colors
labs(title = "Proportion of Obesity (Yes/No) by Employment Type and Sex",
x = "Employment Type",
y = "Proportion",
fill = "Obesity") +
guides(x = guide_axis(angle = 45)) +  # Rotate x-axis labels for readability
theme_minimal()
